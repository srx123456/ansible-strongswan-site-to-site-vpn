- name: Setup IPSec VPN with strongswan
  hosts: all
  tasks:
    - name: set_fact | figure out private ip address and interface
      set_fact:
        private_ip: "{{ hostvars[inventory_hostname]['ansible_' + item]['ipv4']['address'] }}"
        private_interface: "{{ hostvars[inventory_hostname]['ansible_' + item]['device'] }}"
      when:
        - hostvars[inventory_hostname]['ansible_' + item].ipv4 is defined
        - hostvars[inventory_hostname]['ansible_' + item]['ipv4']['address'] | ipaddr(hostvars[inventory_hostname]['local_subnet'])
      with_items: "{{ ansible_interfaces }}"
    
    - name: install strongswan
      apt:
        name: strongswan
        cache_valid_time: 3600
        state: present
    
    - name: set net.ipv4.ip_forward to 1
      sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        sysctl_set: yes
        state: present
        reload: yes
    
    - name: write ipsec conf
      template:
        src: strongswan_conf.j2
        dest: /etc/ipsec.conf
      notify: reload ipsec  
    
    - name: write the vpn secrets file
      template:
        src: strongswan_secrets.j2
        dest: /etc/ipsec.secrets
      notify: reload ipsec

    - name: write updown.sh
      template:
        src: updown_sh.j2
        dest: /etc/strongswan.d/updown.sh
      notify: reload ipsec

  handlers:
    - name: reload ipsec
      shell:
        cmd: /usr/sbin/ipsec reload
      notify: restart ipsec  

    - name: restart ipsec
      systemd:
        name: ipsec
        state: restarted

# - name: register hostvars to json file
#   hosts: all
#   tasks:    
#     - name: get hostvars
#       copy:
#         content: "{{ hostvars | to_nice_json }}"
#         dest: "/home/kenneth/myansible/strongswan-one-node/hostvars.json"
#       delegate_to: localhost
    # - name: debug
    #   debug:
    #     var: hostvars

#  ip: "{{ (ansible_default_ipv4.address + '/' + ansible_default_ipv4.netmask) | ipaddr('prefix') }}"